/* **** BEGIN LICENSE BLOCK *****
 *  Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *  
 *  The contents of this file are subject to the Mozilla Public License
 *  Version 1.1 (the "License"); you may not use this file except in
 *  compliance with the License. You may obtain a copy of the License at
 *  http://www.mozilla.org/MPL/
 *  
 *  Software distributed under the License is distributed on an "AS IS"
 *  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 *  License for the specific language governing rights and limitations
 *  under the License.
 *  
 *  The Original Code is pyxpcomext.mozdev.org code.
 *  
 *  The Initial Developer of the Original Code is Todd Whiteman.
 *  Portions created by the Initial Developer are Copyright (C) 2007-2008.
 *  All Rights Reserved.
 *  
 *  Contributor(s):
 *    Todd Whiteman
 *  
 *  Alternatively, the contents of this file may be used under the terms of
 *  either the GNU General Public License Version 2 or later (the "GPL"), or
 *  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 *  in which case the provisions of the GPL or the LGPL are applicable instead
 *  of those above. If you wish to allow use of your version of this file only
 *  under the terms of either the GPL or the LGPL, and not to allow others to
 *  use your version of this file under the terms of the MPL, indicate your
 *  decision by deleting the provisions above and replace them with the notice
 *  and other provisions required by the GPL or the LGPL. If you do not delete
 *  the provisions above, a recipient may use your version of this file under
 *  the terms of any one of the MPL, the GPL or the LGPL.
 *  
 * **** END LICENSE BLOCK *****
 */

#include "nsISupports.idl"
#include "nsIVariant.idl"

interface pyINTPRequestListener; // Forwarded declaration.

[scriptable, uuid(1cce39b4-2df3-46d8-8073-613bead62548)]
interface pyINTPRequest: nsISupports {
        /**
         * Create the UDP socket and start the request for time details.
         * The listener will be notified when data becomes available.
         */
    void asyncOpen(in pyINTPRequestListener listener);
};

[scriptable, uuid(02f29ad4-5425-4c93-8383-b2e24bda0007)]
interface pyINTPRequestListener: nsISupports {
    void onStartRequest(in nsIVariant aContext);
    void onDataAvailable(in nsIVariant aContext,
                         in wstring data);
    void onStopRequest(in nsIVariant aContext, in long status);
};
